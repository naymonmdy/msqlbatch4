==> Store Routines
(i) Procedures / We can call (Store Procedures)
    (a)In = Input paramenter
    (b)Out = Output paramenter
    (c)INOUT = InOut paramenter


(ii) Function
    (a) Builtin Function
    (b) User define Function
        (i) Input paramenter (paramenter or without but function return 1 time)


-----------------------------------------------------------------------------------------------

(I) Procedure (We can call stored Procedure) OR FUNCTION

CREATE TABLE IF NOT EXISTS capitals (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    name VARCHAR(50) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    payment ENUM('MMK','USD') NOT NULL,
    account ENUM('credit','debit') NOT NULL
);


DESC capitals;
SHOW CREATE TABLE capitals;
SHOW INDEX FROM capitals;

INSERT INTO capitals(date,name,amount,payment,account) values
('2024-06-20','mr.tin',500000,1,1),
('2024-06-21','ms.july',300000,1,1),
('2024-06-22','ms.july',200000,1,1),
('2024-07-1','ms.tin',1000,2,1),
('2024-06-2','ms.tin',3000,2,1),
('2024-07-2','ms.july',3000,2,1),
('2024-07-5','ms.tin',1000,2,1),
('2024-07-6','ms.tin',1000,2,1),
('2024-07-10','ms.tin',100000,1,2);


SELECT * FROM capitals;

==> Capitals by MMK

SELECT name,sum(amount),payment,account FROM capitals
WHERE account = 'credit' AND payment='MMK'
GROUP BY name;


==> Capitals by USD
SELECT name,sum(amount),payment,account FROM capitals
WHERE account = 'credit' AND payment='USD'
GROUP BY name;

CREATE VIEW vw_capitalbymmk AS
SELECT name,sum(amount),payment,account FROM capitals
WHERE account = 'credit' AND payment='MMK'
GROUP BY name;

CREATE OR REPLACE VIEW vw_capitalbyusd AS
SELECT name,sum(amount),payment,account FROM capitals
WHERE account = 'credit' AND payment='USD'
GROUP BY name;


SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';

SELECT * FROM vw_capitalbymmk;
SELECT * FROM vw_capitalbyusd;

-----------------------------------------------------------------------------------------------

==> Capital by account

SELECT date,name,amount,payment,account
FROM capitals
WHERE account ="credit"
ORDER BY date DESC;

SELECT date,name,amount,payment,account
FROM capitals
WHERE account ="debit"
ORDER BY date DESC;


DELIMITER //
CREATE PROCEDURE cpreportaccounts_proc(p_acc VARCHAR(10))
    BEGIN
        SELECT date,name,amount,payment,account
        FROM capitals
        WHERE account = p_acc
        ORDER BY date DESC;
    END; //
DELIMITER ;

==>SHOW
SHOW PROCEDURE STATUS Where ="WDF103259";


**error
CALL cpreportaccounts_proc();

CALL cpreportaccounts_proc("credit");

=>DROP
DROP Procedure if exists cpreportaccounts_proc;



DELIMITER //
CREATE PROCEDURE cpreportdate_pdate(p_date date)
    BEGIN
        SELECT date,name,amount,payment,account
        FROM capitals
        WHERE date = p_date
        ORDER BY date DESC;
    END; //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE cpreportdate_pdate(IN p_date date)
    BEGIN
        SELECT date,name,amount,payment,account
        FROM capitals
        WHERE date = p_date
    END; //
DELIMITER ;


SHOW PROCEDURE STATUS Where ="WDF103259";

CALL cpreportdate_pdate("2024-07-01");
CALL cpreportdate_pdate("2024-07-10");
-----------------------------------------------------------------------------------------------

=> Input and Output;

SELECT * from Customers;
SELECT count(*) from Customers Where city= "bago"; //7
SELECT count(*) from Customers Where city= "yangon"; //8


DELIMITER //
CREATE PROCEDURE totalcurreportbycity_proc(IN p_city VARCHAR(50),OUT p_totalcu INT)
BEGIN

    SELECT count(*) INTO p_totalcu from Customers Where city= p_city; 

END; //

DELIMITER ;


SHOW PROCEDURE STATUS Where ="WDF103259";

*Error
CALL totalcurreportbycity_proc("bago");

SET @totalcustomer :=0;


CALL totalcurreportbycity_proc("bago",@totalcustomer);
SELECT @totalcustomer;

-----------------------------------------------------------------------------------------------
=> Input and Output; (Multi Output)